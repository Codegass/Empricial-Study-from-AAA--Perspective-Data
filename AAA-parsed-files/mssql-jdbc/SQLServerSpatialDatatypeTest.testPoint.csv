testClassName,testMethodName,potentialTargetQualifiedName,AAA
SQLServerSpatialDatatypeTest,testPoint,TEST com.microsoft.sqlserver.jdbc.datatypes.SQLServerSpatialDatatypeTest.hexStringToByteArray(String),0
SQLServerSpatialDatatypeTest,testPoint,     THIRD java.lang.String.length(),0
SQLServerSpatialDatatypeTest,testPoint,     THIRD java.lang.String.charAt(int),0
SQLServerSpatialDatatypeTest,testPoint,"     THIRD java.lang.Character.digit(char, int)",0
SQLServerSpatialDatatypeTest,testPoint,     THIRD java.lang.String.charAt(int),0
SQLServerSpatialDatatypeTest,testPoint,"     THIRD java.lang.Character.digit(char, int)",0
SQLServerSpatialDatatypeTest,testPoint,TEST com.microsoft.sqlserver.jdbc.datatypes.SQLServerSpatialDatatypeTest.hexStringToByteArray(String),0
SQLServerSpatialDatatypeTest,testPoint,     THIRD java.lang.String.length(),0
SQLServerSpatialDatatypeTest,testPoint,     THIRD java.lang.String.charAt(int),0
SQLServerSpatialDatatypeTest,testPoint,"     THIRD java.lang.Character.digit(char, int)",0
SQLServerSpatialDatatypeTest,testPoint,     THIRD java.lang.String.charAt(int),0
SQLServerSpatialDatatypeTest,testPoint,"     THIRD java.lang.Character.digit(char, int)",0
SQLServerSpatialDatatypeTest,testPoint,TEST com.microsoft.sqlserver.jdbc.datatypes.SQLServerSpatialDatatypeTest.hexStringToByteArray(String),0
SQLServerSpatialDatatypeTest,testPoint,     THIRD java.lang.String.length(),0
SQLServerSpatialDatatypeTest,testPoint,     THIRD java.lang.String.charAt(int),0
SQLServerSpatialDatatypeTest,testPoint,"     THIRD java.lang.Character.digit(char, int)",0
SQLServerSpatialDatatypeTest,testPoint,     THIRD java.lang.String.charAt(int),0
SQLServerSpatialDatatypeTest,testPoint,"     THIRD java.lang.Character.digit(char, int)",0
SQLServerSpatialDatatypeTest,testPoint,"TEST com.microsoft.sqlserver.jdbc.datatypes.SQLServerSpatialDatatypeTest.validateGeometryGeography(String, byte[], byte[], byte[])",0
SQLServerSpatialDatatypeTest,testPoint,     com.microsoft.sqlserver.jdbc.Geometry.deserialize(byte[]),1
SQLServerSpatialDatatypeTest,testPoint,     com.microsoft.sqlserver.jdbc.Geography.deserialize(byte[]),1
SQLServerSpatialDatatypeTest,testPoint,     com.microsoft.sqlserver.jdbc.Geometry.asTextZM(),1
SQLServerSpatialDatatypeTest,testPoint,"     ASSERT org.junit.jupiter.api.Assertions.assertEquals(Object, Object)",2
SQLServerSpatialDatatypeTest,testPoint,     com.microsoft.sqlserver.jdbc.Geography.asTextZM(),1
SQLServerSpatialDatatypeTest,testPoint,"     ASSERT org.junit.jupiter.api.Assertions.assertEquals(Object, Object)",2
SQLServerSpatialDatatypeTest,testPoint,     com.microsoft.sqlserver.jdbc.Geometry.STAsBinary(),1
SQLServerSpatialDatatypeTest,testPoint,"     ASSERT org.junit.Assert.assertArrayEquals(byte[], byte[])",2
SQLServerSpatialDatatypeTest,testPoint,     com.microsoft.sqlserver.jdbc.Geography.STAsBinary(),2
SQLServerSpatialDatatypeTest,testPoint,"     ASSERT org.junit.Assert.assertArrayEquals(byte[], byte[])",2
